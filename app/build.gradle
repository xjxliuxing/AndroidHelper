apply plugin: 'com.android.application'

//kotlin的依赖
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    def global = rootProject.extensions.getByName("ext")

    compileSdkVersion global.androidCompileSdkVersion
    buildToolsVersion global.androidBuildToolsVersion

    defaultConfig {
        applicationId "com.xjx.helper"
        minSdkVersion global.androidMinSdkVersion
        targetSdkVersion global.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'dplus'
            keyPassword '123456'
            storeFile file('dplus')
            storePassword '123456'
        }
        debug {
            keyAlias 'dplus'
            keyPassword '123456'
            storeFile file('dplus')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "SERVER_URL", project.SERVER_URL)
            buildConfigField("String", "APP_ID", project.APP_ID)
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            buildConfigField("String", "SERVER_URL", project.SERVER_URL_DEBUG)
            buildConfigField("String", "APP_ID", project.APP_ID_DEBUG)
        }
    }


    // 编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res',
                            'src/main/res/layout/common',
                    ]
            jniLibs.srcDirs = ['libs']  /**在libs文件夹下找so文件*/
        }
        main.jniLibs.srcDirs = ['libs']
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // logger 工具
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-beta01'
    // eventbus 3.1
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.google.code.gson:gson:2.8.2'
    // 6.0动态权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    // 刷新框架
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'

    // 图片框架
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    // RxJava1
    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    // RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.2.11'
    implementation 'com.android.support:design:28.0.0'
}
